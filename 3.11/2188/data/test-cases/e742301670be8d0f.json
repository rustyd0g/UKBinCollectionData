{"uid":"e742301670be8d0f","name":"Validate Council Output [LondonBoroughHounslow]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"e674cebf616dd1178743c85688db8654","time":{"start":1728433060934,"stop":1728433121546,"duration":60612},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff658edac00>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff6598b40d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7ff658c4f5d0>, page = ''\nkwargs = {'council_module_str': 'LondonBoroughHounslow', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all'","statusTrace":"fixturefunc = <function scrape_step at 0x7ff658edac00>\nrequest = <FixtureRequest for <Function test_scenario_outline[LondonBoroughHounslow]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff6598b40d0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LondonBoroughHounslow.CouncilClass object at 0x7ff658c4f5d0>, page = ''\nkwargs = {'council_module_str': 'LondonBoroughHounslow', 'dev_mode': False, 'headless': True, 'local_browser': False, ...}\napi_url = 'https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder'\nuser_uprn = '100021577765', form_data = {'UPRN': '100021577765'}\nresponse = <Response [504]>\nsoup = <html>\n<head><title>504 Gateway Time-out</title></head>\n<body>\n<center><h1>504 Gateway Time-out</h1></center>\n</body>\n</html>\n\ndata = {'bins': []}, div_element = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.hounslow.gov.uk/homepage/86/recycling_and_waste_collection_day_finder\"\n        user_uprn = kwargs.get(\"uprn\")\n    \n        # Check the UPRN is valid\n        check_uprn(user_uprn)\n    \n        # Create the form data\n        form_data = {\n            \"UPRN\": user_uprn,\n        }\n    \n        # Make a request to the API\n        requests.packages.urllib3.disable_warnings()\n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Get the div element\n        div_element = soup.find(\"div\", {\"class\": \"bin_day_main_wrapper\"})\n    \n        # Get all bins with their corresponding dates using list comprehension\n        # This creates a list of tuples, where each tuple contains the bin type and collection date\n        bins_with_dates = [\n            (\n                bin.get_text().strip(),\n                h4.get_text().replace(\"This \", \"\").replace(\"Next \", \"\"),\n            )\n            # This first for loop iterates over each h4 element\n>           for h4 in div_element.find_all(\"h4\")\n            # This nested for loop iterates over each li element within the corresponding ul element\n            for bin in h4.find_next_sibling(\"ul\").find_all(\"li\")\n        ]\nE       AttributeError: 'NoneType' object has no attribute 'find_all'\n\nuk_bin_collection/uk_bin_collection/councils/LondonBoroughHounslow.py:47: AttributeError","steps":[{"name":"Given the council","time":{"start":1728433060934,"stop":1728433060934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728433060935,"stop":1728433121546,"duration":60611},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"988467b373f923f4","name":"stdout","source":"988467b373f923f4.txt","type":"text/plain","size":48}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az732-52"},{"name":"thread","value":"2802-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"LondonBoroughHounslow"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":0,"skipped":0,"passed":326,"unknown":0,"total":345},"items":[{"uid":"90df07e39acd1459","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2169//#testresult/90df07e39acd1459","status":"passed","time":{"start":1728333042825,"stop":1728333045466,"duration":2641}},{"uid":"79a45a3444d7e235","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2165//#testresult/79a45a3444d7e235","status":"passed","time":{"start":1728260427693,"stop":1728260446562,"duration":18869}},{"uid":"62e5b40ac57c70d3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2164//#testresult/62e5b40ac57c70d3","status":"passed","time":{"start":1728174042797,"stop":1728174047835,"duration":5038}},{"uid":"2f8fc9b7a24f7328","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2160//#testresult/2f8fc9b7a24f7328","status":"passed","time":{"start":1728087173833,"stop":1728087190285,"duration":16452}},{"uid":"2a12b6f4d3eef5fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2152//#testresult/2a12b6f4d3eef5fc","status":"passed","time":{"start":1728001053517,"stop":1728001063287,"duration":9770}},{"uid":"182cc16c5c0b7bbb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2148//#testresult/182cc16c5c0b7bbb","status":"passed","time":{"start":1727932898913,"stop":1727932902215,"duration":3302}},{"uid":"6ab8d0ad72452783","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2146//#testresult/6ab8d0ad72452783","status":"passed","time":{"start":1727914707527,"stop":1727914723948,"duration":16421}},{"uid":"2e299564e4a78c0a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2139//#testresult/2e299564e4a78c0a","status":"passed","time":{"start":1727828275584,"stop":1727828281923,"duration":6339}},{"uid":"161332fbb6dab712","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2138//#testresult/161332fbb6dab712","status":"passed","time":{"start":1727741988909,"stop":1727741993856,"duration":4947}},{"uid":"b51c9568d5d6d4e0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2137//#testresult/b51c9568d5d6d4e0","status":"passed","time":{"start":1727655453662,"stop":1727655466147,"duration":12485}},{"uid":"4e07e90676bb643c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2136//#testresult/4e07e90676bb643c","status":"passed","time":{"start":1727569120615,"stop":1727569130715,"duration":10100}},{"uid":"7b909d7eeeca0add","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2135//#testresult/7b909d7eeeca0add","status":"passed","time":{"start":1727482768868,"stop":1727482772105,"duration":3237}},{"uid":"a9050b0e29c1610d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2131//#testresult/a9050b0e29c1610d","status":"passed","time":{"start":1727422714079,"stop":1727422717348,"duration":3269}},{"uid":"289f013acadab3d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2130//#testresult/289f013acadab3d4","status":"passed","time":{"start":1727396434705,"stop":1727396445419,"duration":10714}},{"uid":"6c31db15a2814e2c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2129//#testresult/6c31db15a2814e2c","status":"passed","time":{"start":1727309913513,"stop":1727309919297,"duration":5784}},{"uid":"278b46322d1dcfb4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/278b46322d1dcfb4","status":"passed","time":{"start":1727223513191,"stop":1727223523544,"duration":10353}},{"uid":"a338fb2d045f01cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/a338fb2d045f01cf","status":"passed","time":{"start":1727137171850,"stop":1727137203266,"duration":31416}},{"uid":"771afefd82bd8800","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/771afefd82bd8800","status":"passed","time":{"start":1727050765153,"stop":1727050777695,"duration":12542}},{"uid":"485c8bd85fd7c09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/485c8bd85fd7c09","status":"passed","time":{"start":1726964439183,"stop":1726964443532,"duration":4349}},{"uid":"679f6cf64e025453","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/679f6cf64e025453","status":"passed","time":{"start":1726877983912,"stop":1726877998928,"duration":15016}}]},"tags":[]},"source":"e742301670be8d0f.json","parameterValues":["LondonBoroughHounslow"]}