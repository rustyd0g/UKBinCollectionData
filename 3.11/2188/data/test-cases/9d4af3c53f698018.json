{"uid":"9d4af3c53f698018","name":"Validate Council Output [SwanseaCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2cd79e784bcbfa4417889a1e970aa426","time":{"start":1728433532354,"stop":1728433575208,"duration":42854},"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7fd97c5e39c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd97c46a310>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7fd97c5e39c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7fd97c46a310>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Given the council","time":{"start":1728433532354,"stop":1728433532354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728433532354,"stop":1728433575208,"duration":42854},"status":"failed","statusMessage":"502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"44d6621cccc80ef","name":"stdout","source":"44d6621cccc80ef.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az732-52"},{"name":"thread","value":"2793-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwanseaCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":142},"items":[{"uid":"148e02de14ab7823","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2169//#testresult/148e02de14ab7823","status":"passed","time":{"start":1728333713253,"stop":1728333715013,"duration":1760}},{"uid":"2dec03e5e2425848","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2165//#testresult/2dec03e5e2425848","status":"passed","time":{"start":1728261098506,"stop":1728261099416,"duration":910}},{"uid":"2dfb3198cbf58c23","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2164//#testresult/2dfb3198cbf58c23","status":"passed","time":{"start":1728174458669,"stop":1728174459803,"duration":1134}},{"uid":"785f4e49117be1b1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2160//#testresult/785f4e49117be1b1","status":"passed","time":{"start":1728087992943,"stop":1728087994028,"duration":1085}},{"uid":"5c31b1ac1612de89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2152//#testresult/5c31b1ac1612de89","status":"passed","time":{"start":1728001601884,"stop":1728001602818,"duration":934}},{"uid":"7d681b60b3431360","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2148//#testresult/7d681b60b3431360","status":"passed","time":{"start":1727933579909,"stop":1727933580947,"duration":1038}},{"uid":"576d13ebd35cdfb3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2146//#testresult/576d13ebd35cdfb3","status":"passed","time":{"start":1727915398074,"stop":1727915399171,"duration":1097}},{"uid":"c759613bba0e8c5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2139//#testresult/c759613bba0e8c5d","status":"passed","time":{"start":1727828679643,"stop":1727828680725,"duration":1082}},{"uid":"b7e26f61c3eb41c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2138//#testresult/b7e26f61c3eb41c0","status":"passed","time":{"start":1727742366454,"stop":1727742368098,"duration":1644}},{"uid":"bec1a30346c21505","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2137//#testresult/bec1a30346c21505","status":"passed","time":{"start":1727656196407,"stop":1727656197373,"duration":966}},{"uid":"437816bffdba83f3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2136//#testresult/437816bffdba83f3","status":"passed","time":{"start":1727569558129,"stop":1727569559678,"duration":1549}},{"uid":"280f36d60e55e4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2135//#testresult/280f36d60e55e4b","status":"passed","time":{"start":1727483219949,"stop":1727483220892,"duration":943}},{"uid":"84eedc8b15a2d043","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2131//#testresult/84eedc8b15a2d043","status":"passed","time":{"start":1727423064437,"stop":1727423065794,"duration":1357}},{"uid":"5d31d8740eea75db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2130//#testresult/5d31d8740eea75db","status":"passed","time":{"start":1727396794029,"stop":1727396795523,"duration":1494}},{"uid":"f6c5ec54f5e74b25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2129//#testresult/f6c5ec54f5e74b25","status":"passed","time":{"start":1727310297641,"stop":1727310298745,"duration":1104}},{"uid":"7e34fb66e1a57ab","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/7e34fb66e1a57ab","status":"passed","time":{"start":1727223903301,"stop":1727223904233,"duration":932}},{"uid":"cc102e4243dcba6c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/cc102e4243dcba6c","status":"passed","time":{"start":1727137844077,"stop":1727137845593,"duration":1516}},{"uid":"12b7a94316be921a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2126//#testresult/12b7a94316be921a","status":"passed","time":{"start":1727051122005,"stop":1727051123016,"duration":1011}},{"uid":"38959df85150bbc3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2125//#testresult/38959df85150bbc3","status":"passed","time":{"start":1726965141878,"stop":1726965143476,"duration":1598}},{"uid":"58a4e9b0acc9f863","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2124//#testresult/58a4e9b0acc9f863","status":"passed","time":{"start":1726878419675,"stop":1726878420480,"duration":805}}]},"tags":[]},"source":"9d4af3c53f698018.json","parameterValues":["SwanseaCouncil"]}