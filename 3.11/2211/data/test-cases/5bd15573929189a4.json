{"uid":"5bd15573929189a4","name":"Validate Council Output [GuildfordCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"316f6b3276320661fa68609de6296157","time":{"start":1728692318223,"stop":1728692358279,"duration":40056},"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557296126b9a <unknown>\n#1 0x557295e0c670 <unknown>\n#2 0x557295e5bc48 <unknown>\n#3 0x557295e5bee1 <unknown>\n#4 0x557295ea2924 <unknown>\n#5 0x557295e80bad <unknown>\n#6 0x557295e9fdd6 <unknown>\n#7 0x557295e80923 <unknown>\n#8 0x557295e4e6e7 <unknown>\n#9 0x557295e4f6de <unknown>\n#10 0x5572960f066b <unknown>\n#11 0x5572960f4611 <unknown>\n#12 0x5572960dc4e5 <unknown>\n#13 0x5572960f5192 <unknown>\n#14 0x5572960c16ef <unknown>\n#15 0x5572961159d8 <unknown>\n#16 0x557296115ba7 <unknown>\n#17 0x5572961259ec <unknown>\n#18 0x7feee1b8da94 <unknown>\n#19 0x7feee1c1aa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f5d86622e80>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5d8696cf90>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:59: in parse_data\n    address_element = WebDriverWait(driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a54dcc44505ec65354594fe6f1d8d22c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5d86363d80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557296126b9a <unknown>\nE       #1 0x557295e0c670 <unknown>\nE       #2 0x557295e5bc48 <unknown>\nE       #3 0x557295e5bee1 <unknown>\nE       #4 0x557295ea2924 <unknown>\nE       #5 0x557295e80bad <unknown>\nE       #6 0x557295e9fdd6 <unknown>\nE       #7 0x557295e80923 <unknown>\nE       #8 0x557295e4e6e7 <unknown>\nE       #9 0x557295e4f6de <unknown>\nE       #10 0x5572960f066b <unknown>\nE       #11 0x5572960f4611 <unknown>\nE       #12 0x5572960dc4e5 <unknown>\nE       #13 0x5572960f5192 <unknown>\nE       #14 0x5572960c16ef <unknown>\nE       #15 0x5572961159d8 <unknown>\nE       #16 0x557296115ba7 <unknown>\nE       #17 0x5572961259ec <unknown>\nE       #18 0x7feee1b8da94 <unknown>\nE       #19 0x7feee1c1aa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557296126b9a <unknown>\n#1 0x557295e0c670 <unknown>\n#2 0x557295e5bc48 <unknown>\n#3 0x557295e5bee1 <unknown>\n#4 0x557295ea2924 <unknown>\n#5 0x557295e80bad <unknown>\n#6 0x557295e9fdd6 <unknown>\n#7 0x557295e80923 <unknown>\n#8 0x557295e4e6e7 <unknown>\n#9 0x557295e4f6de <unknown>\n#10 0x5572960f066b <unknown>\n#11 0x5572960f4611 <unknown>\n#12 0x5572960dc4e5 <unknown>\n#13 0x5572960f5192 <unknown>\n#14 0x5572960c16ef <unknown>\n#15 0x5572961159d8 <unknown>\n#16 0x557296115ba7 <unknown>\n#17 0x5572961259ec <unknown>\n#18 0x7feee1b8da94 <unknown>\n#19 0x7feee1c1aa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7f5d86622e80>\nrequest = <FixtureRequest for <Function test_scenario_outline[GuildfordCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5d8696cf90>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/GuildfordCouncil.py:59: in parse_data\n    address_element = WebDriverWait(driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a54dcc44505ec65354594fe6f1d8d22c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f5d86363d80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x557296126b9a <unknown>\nE       #1 0x557295e0c670 <unknown>\nE       #2 0x557295e5bc48 <unknown>\nE       #3 0x557295e5bee1 <unknown>\nE       #4 0x557295ea2924 <unknown>\nE       #5 0x557295e80bad <unknown>\nE       #6 0x557295e9fdd6 <unknown>\nE       #7 0x557295e80923 <unknown>\nE       #8 0x557295e4e6e7 <unknown>\nE       #9 0x557295e4f6de <unknown>\nE       #10 0x5572960f066b <unknown>\nE       #11 0x5572960f4611 <unknown>\nE       #12 0x5572960dc4e5 <unknown>\nE       #13 0x5572960f5192 <unknown>\nE       #14 0x5572960c16ef <unknown>\nE       #15 0x5572961159d8 <unknown>\nE       #16 0x557296115ba7 <unknown>\nE       #17 0x5572961259ec <unknown>\nE       #18 0x7feee1b8da94 <unknown>\nE       #19 0x7feee1c1aa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Given the council","time":{"start":1728692318223,"stop":1728692318223,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728692318223,"stop":1728692358279,"duration":40056},"status":"failed","statusMessage":"Message: \nStacktrace:\n#0 0x557296126b9a <unknown>\n#1 0x557295e0c670 <unknown>\n#2 0x557295e5bc48 <unknown>\n#3 0x557295e5bee1 <unknown>\n#4 0x557295ea2924 <unknown>\n#5 0x557295e80bad <unknown>\n#6 0x557295e9fdd6 <unknown>\n#7 0x557295e80923 <unknown>\n#8 0x557295e4e6e7 <unknown>\n#9 0x557295e4f6de <unknown>\n#10 0x5572960f066b <unknown>\n#11 0x5572960f4611 <unknown>\n#12 0x5572960dc4e5 <unknown>\n#13 0x5572960f5192 <unknown>\n#14 0x5572960c16ef <unknown>\n#15 0x5572961159d8 <unknown>\n#16 0x557296115ba7 <unknown>\n#17 0x5572961259ec <unknown>\n#18 0x7feee1b8da94 <unknown>\n#19 0x7feee1c1aa34 __clone\n","statusTrace":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557296126b9a <unknown>\n#1 0x557295e0c670 <unknown>\n#2 0x557295e5bc48 <unknown>\n#3 0x557295e5bee1 <unknown>\n#4 0x557295ea2924 <unknown>\n#5 0x557295e80bad <unknown>\n#6 0x557295e9fdd6 <unknown>\n#7 0x557295e80923 <unknown>\n#8 0x557295e4e6e7 <unknown>\n#9 0x557295e4f6de <unknown>\n#10 0x5572960f066b <unknown>\n#11 0x5572960f4611 <unknown>\n#12 0x5572960dc4e5 <unknown>\n#13 0x5572960f5192 <unknown>\n#14 0x5572960c16ef <unknown>\n#15 0x5572961159d8 <unknown>\n#16 0x557296115ba7 <unknown>\n#17 0x5572961259ec <unknown>\n#18 0x7feee1b8da94 <unknown>\n#19 0x7feee1c1aa34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c813f485e8b220b1","name":"stdout","source":"c813f485e8b220b1.txt","type":"text/plain","size":653}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1984-628"},{"name":"thread","value":"2798-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"GuildfordCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":59,"broken":0,"skipped":0,"passed":253,"unknown":0,"total":312},"items":[{"uid":"decb8165326aa7c2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2210//#testresult/decb8165326aa7c2","status":"passed","time":{"start":1728605816031,"stop":1728605912212,"duration":96181}},{"uid":"69229e9f8003be0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2199//#testresult/69229e9f8003be0c","status":"passed","time":{"start":1728519855196,"stop":1728519880565,"duration":25369}},{"uid":"24d19df6cbce119","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2188//#testresult/24d19df6cbce119","status":"passed","time":{"start":1728433002815,"stop":1728433067128,"duration":64313}},{"uid":"d9590788e2e69761","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2169//#testresult/d9590788e2e69761","status":"passed","time":{"start":1728332230793,"stop":1728332256939,"duration":26146}},{"uid":"69f35a6d0d3bb280","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2165//#testresult/69f35a6d0d3bb280","status":"passed","time":{"start":1728259547405,"stop":1728259596137,"duration":48732}},{"uid":"194cfdbe1afd49db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2164//#testresult/194cfdbe1afd49db","status":"passed","time":{"start":1728173143413,"stop":1728173240699,"duration":97286}},{"uid":"9e068404bbd34fcd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2160//#testresult/9e068404bbd34fcd","status":"passed","time":{"start":1728087122669,"stop":1728087153279,"duration":30610}},{"uid":"228b6f9961fa449f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2152//#testresult/228b6f9961fa449f","status":"passed","time":{"start":1728001056828,"stop":1728001082358,"duration":25530}},{"uid":"1f2136782e28a285","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2148//#testresult/1f2136782e28a285","status":"passed","time":{"start":1727932878984,"stop":1727932904995,"duration":26011}},{"uid":"8f1ac3d1145a68da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2146//#testresult/8f1ac3d1145a68da","status":"passed","time":{"start":1727914687093,"stop":1727914717928,"duration":30835}},{"uid":"fa9df5445334b293","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2139//#testresult/fa9df5445334b293","status":"passed","time":{"start":1727828259894,"stop":1727828284886,"duration":24992}},{"uid":"d8360d42a5510e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2138//#testresult/d8360d42a5510e29","status":"passed","time":{"start":1727741930548,"stop":1727741978912,"duration":48364}},{"uid":"565112c31bb24ef4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2137//#testresult/565112c31bb24ef4","status":"passed","time":{"start":1727655476747,"stop":1727655498653,"duration":21906}},{"uid":"a8be79a5616f912d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2136//#testresult/a8be79a5616f912d","status":"passed","time":{"start":1727569087227,"stop":1727569131257,"duration":44030}},{"uid":"8fb0e45de6896fbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2135//#testresult/8fb0e45de6896fbc","status":"passed","time":{"start":1727482682460,"stop":1727482784421,"duration":101961}},{"uid":"a52e926d85be76db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2131//#testresult/a52e926d85be76db","status":"passed","time":{"start":1727422641952,"stop":1727422689980,"duration":48028}},{"uid":"f0166754c4759e03","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2130//#testresult/f0166754c4759e03","status":"passed","time":{"start":1727396352678,"stop":1727396407899,"duration":55221}},{"uid":"1e455660fda360ed","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2129//#testresult/1e455660fda360ed","status":"passed","time":{"start":1727309896432,"stop":1727309922740,"duration":26308}},{"uid":"86aea67302493d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2128//#testresult/86aea67302493d8","status":"passed","time":{"start":1727223497938,"stop":1727223524491,"duration":26553}},{"uid":"2b4ce0ec7ee50e85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/2127//#testresult/2b4ce0ec7ee50e85","status":"passed","time":{"start":1727137147916,"stop":1727137183397,"duration":35481}}]},"tags":[]},"source":"5bd15573929189a4.json","parameterValues":["GuildfordCouncil"]}