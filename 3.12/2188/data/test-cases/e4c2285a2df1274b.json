{"uid":"e4c2285a2df1274b","name":"Validate Council Output [SwanseaCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2cd79e784bcbfa4417889a1e970aa426","time":{"start":1728433934872,"stop":1728433978011,"duration":43139},"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f5cc4b27ec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5cd770a5a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"fixturefunc = <function scrape_step at 0x7f5cc4b27ec0>\nrequest = <FixtureRequest for <Function test_scenario_outline[SwanseaCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7f5cd770a5a0>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/SwanseaCouncil.py:38: in parse_data\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Given the council","time":{"start":1728433934872,"stop":1728433934872,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1728433934872,"stop":1728433978011,"duration":43139},"status":"failed","statusMessage":"502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/","statusTrace":"requests.exceptions.HTTPError: 502 Server Error: Bad Gateway for url: https://www1.swansea.gov.uk/recyclingsearch/\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a29988a66568caa","name":"stdout","source":"a29988a66568caa.txt","type":"text/plain","size":41}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az735-553"},{"name":"thread","value":"2796-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SwanseaCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":140,"unknown":0,"total":142},"items":[{"uid":"2ddcc743364276c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2169//#testresult/2ddcc743364276c1","status":"passed","time":{"start":1728333678275,"stop":1728333679246,"duration":971}},{"uid":"67e9f33aec1753fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2165//#testresult/67e9f33aec1753fa","status":"passed","time":{"start":1728261172144,"stop":1728261174262,"duration":2118}},{"uid":"d1b4c1de4f954ac","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2164//#testresult/d1b4c1de4f954ac","status":"passed","time":{"start":1728174508357,"stop":1728174509429,"duration":1072}},{"uid":"5c5380a1e36cff02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2160//#testresult/5c5380a1e36cff02","status":"passed","time":{"start":1728088018842,"stop":1728088019706,"duration":864}},{"uid":"c2653da2100105cb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2152//#testresult/c2653da2100105cb","status":"passed","time":{"start":1728001657998,"stop":1728001658879,"duration":881}},{"uid":"6c0e1e4382223ee4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2148//#testresult/6c0e1e4382223ee4","status":"passed","time":{"start":1727933279522,"stop":1727933280489,"duration":967}},{"uid":"43ec6f5302215c50","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2146//#testresult/43ec6f5302215c50","status":"passed","time":{"start":1727915106634,"stop":1727915107678,"duration":1044}},{"uid":"380ac46320fda9dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/380ac46320fda9dc","status":"passed","time":{"start":1727828648885,"stop":1727828649920,"duration":1035}},{"uid":"40473dfefef2d5ef","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/40473dfefef2d5ef","status":"passed","time":{"start":1727742320959,"stop":1727742321922,"duration":963}},{"uid":"ede84a6a74a01408","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/ede84a6a74a01408","status":"passed","time":{"start":1727655972774,"stop":1727655974311,"duration":1537}},{"uid":"fba163c97dfb3f85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/fba163c97dfb3f85","status":"passed","time":{"start":1727569229883,"stop":1727569231246,"duration":1363}},{"uid":"ef56124e310e6e3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/ef56124e310e6e3f","status":"passed","time":{"start":1727483529214,"stop":1727483530286,"duration":1072}},{"uid":"20605e826354fbb1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/20605e826354fbb1","status":"passed","time":{"start":1727423326220,"stop":1727423327675,"duration":1455}},{"uid":"6aa2aed082a3d868","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2130//#testresult/6aa2aed082a3d868","status":"passed","time":{"start":1727396832120,"stop":1727396838227,"duration":6107}},{"uid":"c67129f7ce498dca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2129//#testresult/c67129f7ce498dca","status":"passed","time":{"start":1727309994836,"stop":1727309996375,"duration":1539}},{"uid":"4c447f9f8bd22e55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2128//#testresult/4c447f9f8bd22e55","status":"passed","time":{"start":1727223962975,"stop":1727223963926,"duration":951}},{"uid":"4b5729d9455fb2b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2127//#testresult/4b5729d9455fb2b8","status":"passed","time":{"start":1727137602125,"stop":1727137603195,"duration":1070}},{"uid":"368b706d3080e0f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2126//#testresult/368b706d3080e0f2","status":"passed","time":{"start":1727051254268,"stop":1727051255739,"duration":1471}},{"uid":"5ef11fa9edb0fca0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2125//#testresult/5ef11fa9edb0fca0","status":"passed","time":{"start":1726965088470,"stop":1726965089346,"duration":876}},{"uid":"3327140c90c54553","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2124//#testresult/3327140c90c54553","status":"passed","time":{"start":1726878468114,"stop":1726878469584,"duration":1470}}]},"tags":[]},"source":"e4c2285a2df1274b.json","parameterValues":["SwanseaCouncil"]}