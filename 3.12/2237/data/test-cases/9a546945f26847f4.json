{"uid":"9a546945f26847f4","name":"Validate Council Output [CheshireWestAndChesterCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"64af12fdfc56ab0224e14523e9cf88ad","time":{"start":1729037007290,"stop":1729037057435,"duration":50145},"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n#0 0x562c11d73b9a <unknown>\n#1 0x562c11a59670 <unknown>\n#2 0x562c11aaf8c6 <unknown>\n#3 0x562c11aad7e6 <unknown>\n#4 0x562c11aab297 <unknown>\n#5 0x562c11aaa6a6 <unknown>\n#6 0x562c11a9dae8 <unknown>\n#7 0x562c11acdb82 <unknown>\n#8 0x562c11a9d4c8 <unknown>\n#9 0x562c11acdd4e <unknown>\n#10 0x562c11aecdd6 <unknown>\n#11 0x562c11acd923 <unknown>\n#12 0x562c11a9b6e7 <unknown>\n#13 0x562c11a9c6de <unknown>\n#14 0x562c11d3d66b <unknown>\n#15 0x562c11d41611 <unknown>\n#16 0x562c11d294e5 <unknown>\n#17 0x562c11d42192 <unknown>\n#18 0x562c11d0e6ef <unknown>\n#19 0x562c11d629d8 <unknown>\n#20 0x562c11d62ba7 <unknown>\n#21 0x562c11d729ec <unknown>\n#22 0x7fae1d1b2a94 <unknown>\n#23 0x7fae1d23fa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ff27d39df80>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff27dfaff50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff27c772090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x562c11d729ec \\\\u003Cunknown>\\\\n#22 0x7fae1d1b2a94 \\\\u003Cunknown>\\\\n#23 0x7fae1d23fa34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=129.0.6668.100)\nE       Stacktrace:\nE       #0 0x562c11d73b9a <unknown>\nE       #1 0x562c11a59670 <unknown>\nE       #2 0x562c11aaf8c6 <unknown>\nE       #3 0x562c11aad7e6 <unknown>\nE       #4 0x562c11aab297 <unknown>\nE       #5 0x562c11aaa6a6 <unknown>\nE       #6 0x562c11a9dae8 <unknown>\nE       #7 0x562c11acdb82 <unknown>\nE       #8 0x562c11a9d4c8 <unknown>\nE       #9 0x562c11acdd4e <unknown>\nE       #10 0x562c11aecdd6 <unknown>\nE       #11 0x562c11acd923 <unknown>\nE       #12 0x562c11a9b6e7 <unknown>\nE       #13 0x562c11a9c6de <unknown>\nE       #14 0x562c11d3d66b <unknown>\nE       #15 0x562c11d41611 <unknown>\nE       #16 0x562c11d294e5 <unknown>\nE       #17 0x562c11d42192 <unknown>\nE       #18 0x562c11d0e6ef <unknown>\nE       #19 0x562c11d629d8 <unknown>\nE       #20 0x562c11d62ba7 <unknown>\nE       #21 0x562c11d729ec <unknown>\nE       #22 0x7fae1d1b2a94 <unknown>\nE       #23 0x7fae1d23fa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n#0 0x562c11d73b9a <unknown>\n#1 0x562c11a59670 <unknown>\n#2 0x562c11aaf8c6 <unknown>\n#3 0x562c11aad7e6 <unknown>\n#4 0x562c11aab297 <unknown>\n#5 0x562c11aaa6a6 <unknown>\n#6 0x562c11a9dae8 <unknown>\n#7 0x562c11acdb82 <unknown>\n#8 0x562c11a9d4c8 <unknown>\n#9 0x562c11acdd4e <unknown>\n#10 0x562c11aecdd6 <unknown>\n#11 0x562c11acd923 <unknown>\n#12 0x562c11a9b6e7 <unknown>\n#13 0x562c11a9c6de <unknown>\n#14 0x562c11d3d66b <unknown>\n#15 0x562c11d41611 <unknown>\n#16 0x562c11d294e5 <unknown>\n#17 0x562c11d42192 <unknown>\n#18 0x562c11d0e6ef <unknown>\n#19 0x562c11d629d8 <unknown>\n#20 0x562c11d62ba7 <unknown>\n#21 0x562c11d729ec <unknown>\n#22 0x7fae1d1b2a94 <unknown>\n#23 0x7fae1d23fa34 __clone","statusTrace":"fixturefunc = <function scrape_step at 0x7ff27d39df80>\nrequest = <FixtureRequest for <Function test_scenario_outline[CheshireWestAndChesterCouncil]>>\nkwargs = {'context': <test_validate_council.Context object at 0x7ff27dfaff50>, 'headless_mode': 'True', 'local_browser': 'False', 'selenium_url': 'http://localhost:4444'}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:100: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:101: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:121: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:61: in template_method\n    bin_data_dict = self.get_and_parse_data(this_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:84: in get_and_parse_data\n    bin_data_dict = self.parse_data(\"\", url=address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:52: in parse_data\n    click_element(By.LINK_TEXT, \"Find your collection day\")\nuk_bin_collection/uk_bin_collection/councils/CheshireWestAndChesterCouncil.py:46: in click_element\n    element.click()\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff27c772090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...unknown>\\\\n#21 0x562c11d729ec \\\\u003Cunknown>\\\\n#22 0x7fae1d1b2a94 \\\\u003Cunknown>\\\\n#23 0x7fae1d23fa34 __clone\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\nE         (Session info: chrome=129.0.6668.100)\nE       Stacktrace:\nE       #0 0x562c11d73b9a <unknown>\nE       #1 0x562c11a59670 <unknown>\nE       #2 0x562c11aaf8c6 <unknown>\nE       #3 0x562c11aad7e6 <unknown>\nE       #4 0x562c11aab297 <unknown>\nE       #5 0x562c11aaa6a6 <unknown>\nE       #6 0x562c11a9dae8 <unknown>\nE       #7 0x562c11acdb82 <unknown>\nE       #8 0x562c11a9d4c8 <unknown>\nE       #9 0x562c11acdd4e <unknown>\nE       #10 0x562c11aecdd6 <unknown>\nE       #11 0x562c11acd923 <unknown>\nE       #12 0x562c11a9b6e7 <unknown>\nE       #13 0x562c11a9c6de <unknown>\nE       #14 0x562c11d3d66b <unknown>\nE       #15 0x562c11d41611 <unknown>\nE       #16 0x562c11d294e5 <unknown>\nE       #17 0x562c11d42192 <unknown>\nE       #18 0x562c11d0e6ef <unknown>\nE       #19 0x562c11d629d8 <unknown>\nE       #20 0x562c11d62ba7 <unknown>\nE       #21 0x562c11d729ec <unknown>\nE       #22 0x7fae1d1b2a94 <unknown>\nE       #23 0x7fae1d23fa34 __clone\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.12/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Given the council","time":{"start":1729037007290,"stop":1729037007291,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from the council","time":{"start":1729037007291,"stop":1729037057435,"duration":50144},"status":"failed","statusMessage":"Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n#0 0x562c11d73b9a <unknown>\n#1 0x562c11a59670 <unknown>\n#2 0x562c11aaf8c6 <unknown>\n#3 0x562c11aad7e6 <unknown>\n#4 0x562c11aab297 <unknown>\n#5 0x562c11aaa6a6 <unknown>\n#6 0x562c11a9dae8 <unknown>\n#7 0x562c11acdb82 <unknown>\n#8 0x562c11a9d4c8 <unknown>\n#9 0x562c11acdd4e <unknown>\n#10 0x562c11aecdd6 <unknown>\n#11 0x562c11acd923 <unknown>\n#12 0x562c11a9b6e7 <unknown>\n#13 0x562c11a9c6de <unknown>\n#14 0x562c11d3d66b <unknown>\n#15 0x562c11d41611 <unknown>\n#16 0x562c11d294e5 <unknown>\n#17 0x562c11d42192 <unknown>\n#18 0x562c11d0e6ef <unknown>\n#19 0x562c11d629d8 <unknown>\n#20 0x562c11d62ba7 <unknown>\n#21 0x562c11d729ec <unknown>\n#22 0x7fae1d1b2a94 <unknown>\n#23 0x7fae1d23fa34 __clone\n","statusTrace":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n#0 0x562c11d73b9a <unknown>\n#1 0x562c11a59670 <unknown>\n#2 0x562c11aaf8c6 <unknown>\n#3 0x562c11aad7e6 <unknown>\n#4 0x562c11aab297 <unknown>\n#5 0x562c11aaa6a6 <unknown>\n#6 0x562c11a9dae8 <unknown>\n#7 0x562c11acdb82 <unknown>\n#8 0x562c11a9d4c8 <unknown>\n#9 0x562c11acdd4e <unknown>\n#10 0x562c11aecdd6 <unknown>\n#11 0x562c11acd923 <unknown>\n#12 0x562c11a9b6e7 <unknown>\n#13 0x562c11a9c6de <unknown>\n#14 0x562c11d3d66b <unknown>\n#15 0x562c11d41611 <unknown>\n#16 0x562c11d294e5 <unknown>\n#17 0x562c11d42192 <unknown>\n#18 0x562c11d0e6ef <unknown>\n#19 0x562c11d629d8 <unknown>\n#20 0x562c11d62ba7 <unknown>\n#21 0x562c11d729ec <unknown>\n#22 0x7fae1d1b2a94 <unknown>\n#23 0x7fae1d23fa34 __clone\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"895076c9d43af1b1","name":"log","source":"895076c9d43af1b1.txt","type":"text/plain","size":1357},{"uid":"d5105d8be94233b0","name":"stdout","source":"d5105d8be94233b0.txt","type":"text/plain","size":56}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1768-549"},{"name":"thread","value":"2951-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CheshireWestAndChesterCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":0,"skipped":0,"passed":158,"unknown":0,"total":174},"items":[{"uid":"42d7d9d154192b99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2233//#testresult/42d7d9d154192b99","status":"passed","time":{"start":1728950621901,"stop":1728950701621,"duration":79720}},{"uid":"1280b26bb213d42f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2227//#testresult/1280b26bb213d42f","status":"passed","time":{"start":1728864229156,"stop":1728864296607,"duration":67451}},{"uid":"a23d88ddb00a6dfc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2214//#testresult/a23d88ddb00a6dfc","status":"passed","time":{"start":1728778374021,"stop":1728778452091,"duration":78070}},{"uid":"fa2a5328a71d4a55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2211//#testresult/fa2a5328a71d4a55","status":"passed","time":{"start":1728691970663,"stop":1728692034747,"duration":64084}},{"uid":"807e4685d30cd8cd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2210//#testresult/807e4685d30cd8cd","status":"passed","time":{"start":1728605630612,"stop":1728605696291,"duration":65679}},{"uid":"d463b372107e2c99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2199//#testresult/d463b372107e2c99","status":"passed","time":{"start":1728519194036,"stop":1728519287670,"duration":93634}},{"uid":"7b87090f5d086441","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2188//#testresult/7b87090f5d086441","status":"passed","time":{"start":1728432844515,"stop":1728432904780,"duration":60265}},{"uid":"92819c770c2263f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2169//#testresult/92819c770c2263f5","status":"passed","time":{"start":1728332125298,"stop":1728332183609,"duration":58311}},{"uid":"9099cf226f745d64","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2165//#testresult/9099cf226f745d64","status":"passed","time":{"start":1728259496589,"stop":1728259573321,"duration":76732}},{"uid":"ea8d8c3710fe9d0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2164//#testresult/ea8d8c3710fe9d0c","status":"passed","time":{"start":1728173107773,"stop":1728173332987,"duration":225214}},{"uid":"4b051125a61a4aba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2160//#testresult/4b051125a61a4aba","status":"passed","time":{"start":1728086711658,"stop":1728086758675,"duration":47017}},{"uid":"114a436f3d885a9c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2152//#testresult/114a436f3d885a9c","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556ae090213a <unknown>\n#1 0x556ae05e85e0 <unknown>\n#2 0x556ae0637be8 <unknown>\n#3 0x556ae0637e81 <unknown>\n#4 0x556ae067e8c4 <unknown>\n#5 0x556ae065cb4d <unknown>\n#6 0x556ae067bd7d <unknown>\n#7 0x556ae065c8c3 <unknown>\n#8 0x556ae062a6b3 <unknown>\n#9 0x556ae062b68e <unknown>\n#10 0x556ae08ccb3b <unknown>\n#11 0x556ae08d0ac1 <unknown>\n#12 0x556ae08b9335 <unknown>\n#13 0x556ae08d1642 <unknown>\n#14 0x556ae089e49f <unknown>\n#15 0x556ae08f1038 <unknown>\n#16 0x556ae08f1203 <unknown>\n#17 0x556ae0900f8c <unknown>\n#18 0x7f2adb7b5a94 <unknown>\n#19 0x7f2adb842a34 __clone","time":{"start":1728000271646,"stop":1728000392178,"duration":120532}},{"uid":"a394b97978e27e97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2148//#testresult/a394b97978e27e97","status":"passed","time":{"start":1727931968207,"stop":1727931991784,"duration":23577}},{"uid":"87fe50ca29e44944","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2146//#testresult/87fe50ca29e44944","status":"passed","time":{"start":1727913669046,"stop":1727913703793,"duration":34747}},{"uid":"8abdfdc67656f776","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2139//#testresult/8abdfdc67656f776","status":"passed","time":{"start":1727827270880,"stop":1727827309426,"duration":38546}},{"uid":"b29302c4649ebf5c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2138//#testresult/b29302c4649ebf5c","status":"passed","time":{"start":1727740872717,"stop":1727740906294,"duration":33577}},{"uid":"eb299fb35c983d08","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2137//#testresult/eb299fb35c983d08","status":"passed","time":{"start":1727654475053,"stop":1727654495532,"duration":20479}},{"uid":"74f10154b6f8b37a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2136//#testresult/74f10154b6f8b37a","status":"passed","time":{"start":1727568069631,"stop":1727568103672,"duration":34041}},{"uid":"3625823180e84fdd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2135//#testresult/3625823180e84fdd","status":"passed","time":{"start":1727481676140,"stop":1727481707964,"duration":31824}},{"uid":"455dd50ad5675440","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.12/2131//#testresult/455dd50ad5675440","status":"failed","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://my.cheshirewestandchester.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-0187a2f6-15cb-413a-8a3f-b6d14d63da57/AF-Stage-e18b38ff-be8a-45f4-ac14-f8821024f0c4/definition.json&amp;redirectlink=%2Fen&amp;cancelRedirectLink=%2Fen&amp;consentMessage=yes\" class=\"sc-eDWCr ipXPp orange\">...</a> is not clickable at point (487, 25). Other element would receive the click: <button id=\"ccc-close\" class=\"ccc-link ccc-tabbable \" tabindex=\"0\" aria-label=\"Close Cookie Control\">...</button>\n  (Session info: chrome=129.0.6668.58)\nStacktrace:\n#0 0x55a8c510313a <unknown>\n#1 0x55a8c4de95e0 <unknown>\n#2 0x55a8c4e3f866 <unknown>\n#3 0x55a8c4e3d78d <unknown>\n#4 0x55a8c4e3b237 <unknown>\n#5 0x55a8c4e3a646 <unknown>\n#6 0x55a8c4e2da98 <unknown>\n#7 0x55a8c4e5db22 <unknown>\n#8 0x55a8c4e2d478 <unknown>\n#9 0x55a8c4e5dcee <unknown>\n#10 0x55a8c4e7cd7d <unknown>\n#11 0x55a8c4e5d8c3 <unknown>\n#12 0x55a8c4e2b6b3 <unknown>\n#13 0x55a8c4e2c68e <unknown>\n#14 0x55a8c50cdb3b <unknown>\n#15 0x55a8c50d1ac1 <unknown>\n#16 0x55a8c50ba335 <unknown>\n#17 0x55a8c50d2642 <unknown>\n#18 0x55a8c509f49f <unknown>\n#19 0x55a8c50f2038 <unknown>\n#20 0x55a8c50f2203 <unknown>\n#21 0x55a8c5101f8c <unknown>\n#22 0x7fa8adeeba94 <unknown>\n#23 0x7fa8adf78a34 __clone","time":{"start":1727421649902,"stop":1727421661266,"duration":11364}}]},"tags":[]},"source":"9a546945f26847f4.json","parameterValues":["CheshireWestAndChesterCouncil"]}